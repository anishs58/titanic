
------------------------------------------------
---STORED PROC FOR LOADING DIMENSION TABLES
------------------------------------------------
CREATE PROCEDURE DATAMART.LOAD_DIMENSIONS_DATA
AS
	---DIM_CABIN
	INSERT INTO DATAMART.DIM_CABIN (CABIN) 
	SELECT CABIN FROM 
	(
		SELECT DISTINCT COALESCE(CABIN, 'MISSING') AS CABIN FROM STAGING.STG_TITANIC_SOURCE_DATA_HISTORY
		WHERE RECORD_PROCESSSED_FLAG = 'N'
		EXCEPT
		SELECT DISTINCT COALESCE(CABIN, 'MISSING') AS CABIN FROM DATAMART.DIM_CABIN	
	) CABINS
	;

	
	---DIM_SEX
	INSERT INTO DATAMART.DIM_SEX (SEX) 
	SELECT SEX FROM 
	(
		SELECT DISTINCT COALESCE(PASSENGER_SEX, 'MISSING') AS SEX FROM STAGING.STG_TITANIC_SOURCE_DATA_HISTORY
		WHERE RECORD_PROCESSSED_FLAG = 'N'
		EXCEPT
		SELECT DISTINCT COALESCE(SEX, 'MISSING') AS SEX FROM DATAMART.DIM_SEX	
	) SEX
	;

	
	---DIM_EMBARKED
	INSERT INTO DATAMART.DIM_EMBARKED (EMBARKED) 
	SELECT EMBARKED FROM 
	(
		SELECT DISTINCT COALESCE(EMBARKED, 'MISSING') AS EMBARKED FROM STAGING.STG_TITANIC_SOURCE_DATA_HISTORY
		WHERE RECORD_PROCESSSED_FLAG = 'N'
		EXCEPT
		SELECT DISTINCT COALESCE(EMBARKED, 'MISSING') AS EMBARKED FROM DATAMART.DIM_EMBARKED	
	) EMBARKED
	;	
	
	
	---DIM_TICKET
	INSERT INTO DATAMART.DIM_TICKET (TICKET) 
	SELECT TICKET FROM 
	(
		SELECT DISTINCT COALESCE(TICKET_ID, 'MISSING') AS TICKET FROM STAGING.STG_TITANIC_SOURCE_DATA_HISTORY
		WHERE RECORD_PROCESSSED_FLAG = 'N'
		EXCEPT
		SELECT DISTINCT COALESCE(TICKET, 'MISSING') AS TICKET FROM DATAMART.DIM_TICKET	
	) TICKET
	;
	
	
	---DIM_CLASS
	INSERT INTO DATAMART.DIM_CLASS (CLASS) 
	SELECT CLASS FROM 
	(
		SELECT DISTINCT COALESCE(PASSENGER_CLASS, -999) AS CLASS FROM STAGING.STG_TITANIC_SOURCE_DATA_HISTORY
		WHERE RECORD_PROCESSSED_FLAG = 'N'
		EXCEPT
		SELECT DISTINCT COALESCE(CLASS, -999) AS CLASS FROM DATAMART.DIM_CLASS
	) CLASS
	;	
	
	--- DIM_PASSENGER NEW RECORDS AND UPDATES 
	--- BASED ON PASSENGER'S NAME OR AGE (FOR A GIVEN PASSENGER ID)
	MERGE DATAMART.DIM_PASSENGER AS Target
		USING STAGING.STG_TITANIC_SOURCE_DATA_HISTORY	AS Source
		ON Source.PASSENGER_ID = Target.PASSENGER_ID
		-- For Inserts
		WHEN NOT MATCHED AND Source.RECORD_PROCESSSED_FLAG = 'N' THEN
			INSERT (
				PASSENGER_ID,
				PASSENGER_NAME,
				PASSENGER_AGE,
				AGE_BRACKET
			) 
			VALUES (
				Source.PASSENGER_ID,
				Source.PASSENGER_NAME,
				Source.PASSENGER_AGE,
				CASE WHEN Source.PASSENGER_AGE BETWEEN 0 AND 10 THEN '0-10'
				 WHEN Source.PASSENGER_AGE BETWEEN 11 AND 25 THEN '11-25'
				 WHEN Source.PASSENGER_AGE BETWEEN 26 AND 50 THEN '26-50'
				 WHEN Source.PASSENGER_AGE > 50 THEN ' ABOVE 50'
				 ELSE 'INVALID AGE' END
			)
		-- For Updates
		WHEN MATCHED AND Source.RECORD_PROCESSSED_FLAG = 'N' AND CHECKSUM(
					Source.PASSENGER_ID,
					Source.PASSENGER_NAME,
					Source.PASSENGER_AGE
				) != CHECKSUM(
					Target.PASSENGER_ID,
					Target.PASSENGER_NAME,
					Target.PASSENGER_AGE
				)
			THEN UPDATE SET
				Target.PASSENGER_NAME	= Source.PASSENGER_NAME,
				Target.PASSENGER_AGE = Source.PASSENGER_AGE,
				Target.AGE_BRACKET = CASE WHEN Source.PASSENGER_AGE BETWEEN 1 AND 10 THEN '1-10'
										 WHEN Source.PASSENGER_AGE BETWEEN 11 AND 25 THEN '11-25'
										 WHEN Source.PASSENGER_AGE BETWEEN 26 AND 50 THEN '26-50'
										 WHEN Source.PASSENGER_AGE > 50 THEN ' ABOVE 50'
										 ELSE 'INVALID AGE' END ,
				Target.UPDATED_DATE = CURRENT_TIMESTAMP
			;
	
GO
;
